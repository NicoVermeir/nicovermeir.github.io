---
layout: post
title: "porting a real win8 app to wp8â€“part 2"
date: 2013-03-08 13:51:00 +0100
comments: true
published: true
categories: ["post"]
tags: [".Net", "Devices", "Metro", "MVVM Light", "PCL", "Windows 8", "WinRT", "WP8"]
alias: ["/blog/post/2013/03/08/Porting-a-real-win8-app-to-WP8-part-2.aspx", "/blog/post/2013/03/08/porting-a-real-win8-app-to-wp8-part-2.aspx"]
author: Nico Vermeir
redirect_from:
 - /blog/post/2013/03/08/Porting-a-real-win8-app-to-WP8-part-2.aspx
 - /blog/post/2013/03/08/porting-a-real-win8-app-to-wp8-part-2.aspx
---
<p><a href="http://www.spikie.be/blog/post/2013/02/27/Porting-a-real-win8-app-to-WP8&ndash;part-1.aspx" target="_blank">Porting a real win8 app to WP8 &ndash; part 1</a></p>
<p>In part one of my adventure I described the architecture of my app and how I managed to move all viewmodels into a PCL (portable class library) but I didn&rsquo;t use them yet. The main consensus of part one was that I needed to do quite some refactoring and add a lot of abstractions to the project in order to move over viewmodels to PCL projects. In part 2 I&rsquo;ll describe how I got the viewmodels to work and how I re-enabled page navigation in the Windows 8 version. And with a bit of luck in part 3 I&rsquo;ll be talking about the Windows Phone 8 version of this app.</p>
<h2>A small note on part 1</h2>
<p>I wasn&rsquo;t very happy with part 1 since I needed to create some extra layers and abstractions. Since then the Microsoft Techdays have come and gone and with that two very interesting sessions that made me rethink some stuff. The session were from Laurent Bugnion (<a href="http://www.galasoft.ch/" target="_blank">his blog</a>, <a href="http://www.twitter.com/lbugnion" target="_blank">his&nbsp;Twitter</a>)&nbsp;(the creator of the awesome MVVM Light toolkit) and Gill Cleeren (<a href="http://www.snowball.be" target="_blank">his blog</a>, <a href="http://www.twitter.com/gillcleeren" target="_blank">his Twitter</a>)&nbsp;(a Belgian Silverlight MVP, RD and Win8 enthusiast). From Laurent I learned some tips and tricks concerning the ViewModelLocator class and specifically how to correctly use it in a portable library (more on that in part 3 since I haven&rsquo;t implemented it yet). Gill gave a session on advanced MVVM tactics and one sentence kept vibrating in my mind &ldquo;an extra class doesn&rsquo;t cost a thing&rdquo; next to that his demo app was filled with layers of abstractions way beyond the extra layers I needed to add to get the project to build again. After that session I felt reassured that I was going down a pretty good path with the revised architecture I had build in part 1. If you want to take a look at that session yourself, the recording of the SilverlightShow version is available <a href="http://www.silverlightshow.net/video/Applied-MVVM-in-Win8-Webinar.aspx" target="_blank">here</a>.</p>
<h2>About part 2</h2>
<p>The last couple of days I found some spare time to mess around with the project again. I&rsquo;m now at the stage where the Windows Store app is using the portable ViewModels and the navigation is working properly. Those parts are what I&rsquo;ll discuss here.</p>
<h2>Using the ViewModels</h2>
<p>Having the portable ViewModels ready it was time to switch to them. I deleted every viewmodel that was still in my client project, except for the ViewModelLocator, that one will be moved later. I registered the new abstraction layers in the ViewModelLocator, making sure that this only happened at runtime, not at designtime and tried to build the app. I couldn&rsquo;t believe my eyes when I saw the message &ldquo;Build succeeded&rdquo;. I replaced the viewmodels in my client project with the ones in the portable library and it still builds! In case you&rsquo;re interested, this is what&rsquo;s getting registered in my ViewModelLocator at this time.</p>
<div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:25d8156b-2f93-48ae-b0f1-0930527ab843" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;">
<div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;">
<div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px;">Code Snippet</div>
<div style="background: #ddd; max-height: 500px; overflow: auto;"><ol style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;" start="1">
<li><span style="background: #ffffff; color: #0000ff;">public</span><span style="background: #ffffff; color: #000000;"> ViewModelLocator()</span></li>
<li style="background: #f3f3f3;"><span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">ServiceLocator</span><span style="background: #ffffff; color: #000000;">.SetLocatorProvider(() =&gt; </span><span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default);</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">if</span><span style="background: #ffffff; color: #000000;"> (</span><span style="background: #ffffff; color: #2b91af;">ViewModelBase</span><span style="background: #ffffff; color: #000000;">.IsInDesignModeStatic)</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">// Create design time view services and models</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">//SimpleIoc.Default.Register&lt;IDataService, DesignDataService&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">else</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">// Create run time view services and models</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">INavigationService</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">NavigationService</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IService</span><span style="background: #ffffff; color: #000000;">, SDKBroker.WinRT.</span><span style="background: #ffffff; color: #2b91af;">Service</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IMessageApi</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">MessageApi</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IFrameworkApi</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">FrameworkApi</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IDispatcher</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">Dispatcher</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">INetworkApi</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">NetworkApi</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">//register viewmodels</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">MainViewModel</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">VolumeDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">CharacterDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">TeamDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IssueDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">SearchViewModel</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">DetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">StoryArcDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">LocationDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">PersonDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">CollectionViewModel</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">NewsFeedViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;"><span style="background: #ffffff; color: #000000;">}</span></li>
</ol></div>
</div>
</div>
<p>Everything in the else block gets registered only at runtime. The viewmodels themselves can get registered at designtime just in case I ever want to incorporate designtime test data (something I really should do actually). Notice that some ViewModel registrations get passed a boolean parameter? The Register method of SimpleIoc has an optional parameter stating whether or not the object should get instantiated immediately. Since some viewmodels are listening for messages from the Messenger class in MVVM Light they need their instance right of the bat so they can register as listeners.</p>
<p>I tried to run the app, it started and data was coming in, I could use the button to show the search charm but no navigation was working. That made sense since all navigation commands are now going to ISomePage instead of SomePage and those interfaces weren&rsquo;t doing anything yet. So I had to make every page implement the correct interface and put together a way to navigate to the correct page from the interface.</p>
<p>Implementing the interface is easy enough (they&rsquo;re all just empty interfaces). Next problem was that those interfaces are inside of a folder called View in the ViewModel PCL and they need to be known in the Framework.WinRT project (that&rsquo;s where the NavigationService lives). So I&rsquo;ve added another PCL called it ComicDB.View and moved all interfaces there. (I couldn&rsquo;t reference the ViewModel project in the Framework project, it would create a circular dependency). After adding all references everything was building again but still no navigation. To get this to work I changed the Navigate method on the NavigationService from this</p>
<div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:9c972e9e-3577-47a1-bb2c-f97f84e9c232" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;">
<div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;">
<div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px;">Code Snippet</div>
<div style="background: #ddd; max-height: 300px; overflow: auto;"><ol style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;" start="1">
<li><span style="background: #ffffff; color: #0000ff;">public</span><span style="background: #ffffff; color: #0000ff;">virtual</span><span style="background: #ffffff; color: #0000ff;">bool</span><span style="background: #ffffff; color: #000000;"> Navigate(</span><span style="background: #ffffff; color: #2b91af;">Type</span><span style="background: #ffffff; color: #000000;"> destination, </span><span style="background: #ffffff; color: #0000ff;">object</span><span style="background: #ffffff; color: #000000;"> parameter = </span><span style="background: #ffffff; color: #0000ff;">null</span><span style="background: #ffffff; color: #000000;">)</span></li>
<li style="background: #f3f3f3;"><span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">try</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">_rootFrame.Navigate(destination, parameter);</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">return</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">;</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">catch</span><span style="background: #ffffff; color: #000000;"> (</span><span style="background: #ffffff; color: #2b91af;">Exception</span><span style="background: #ffffff; color: #000000;"> e)</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">return</span><span style="background: #ffffff; color: #0000ff;">false</span><span style="background: #ffffff; color: #000000;">;</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li><span style="background: #ffffff; color: #000000;">}</span></li>
</ol></div>
</div>
</div>
<p>to this</p>
<div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:38c4392b-5c4f-4238-bb1f-fd9253887a0b" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;">
<div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;">
<div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px;">Code Snippet</div>
<div style="background: #ddd; max-height: 500px; overflow: auto;"><ol style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;" start="1">
<li><span style="background: #ffffff; color: #0000ff;">public</span><span style="background: #ffffff; color: #0000ff;">virtual</span><span style="background: #ffffff; color: #0000ff;">bool</span><span style="background: #ffffff; color: #000000;"> Navigate(</span><span style="background: #ffffff; color: #2b91af;">Type</span><span style="background: #ffffff; color: #000000;"> destination, </span><span style="background: #ffffff; color: #0000ff;">object</span><span style="background: #ffffff; color: #000000;"> parameter = </span><span style="background: #ffffff; color: #0000ff;">null</span><span style="background: #ffffff; color: #000000;">)</span></li>
<li style="background: #f3f3f3;"><span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">try</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">NavigateToPage(destination, parameter);</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">return</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">;</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">catch</span><span style="background: #ffffff; color: #000000;"> (</span><span style="background: #ffffff; color: #2b91af;">Exception</span><span style="background: #ffffff; color: #000000;"> e)</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">return</span><span style="background: #ffffff; color: #0000ff;">false</span><span style="background: #ffffff; color: #000000;">;</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li><span style="background: #ffffff; color: #000000;">}</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li><span style="background: #ffffff; color: #0000ff;">private</span><span style="background: #ffffff; color: #0000ff;">void</span><span style="background: #ffffff; color: #000000;"> NavigateToPage(</span><span style="background: #ffffff; color: #2b91af;">Type</span><span style="background: #ffffff; color: #000000;"> destination, </span><span style="background: #ffffff; color: #0000ff;">object</span><span style="background: #ffffff; color: #000000;"> parameter)</span></li>
<li style="background: #f3f3f3;"><span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">try</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">//get the implementation for the view</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">var</span><span style="background: #ffffff; color: #000000;"> instance = </span><span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.GetInstance(destination);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">var</span><span style="background: #ffffff; color: #000000;"> type = instance.GetType();</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">_rootFrame.Navigate(type, parameter);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">catch</span><span style="background: #ffffff; color: #000000;"> (</span><span style="background: #ffffff; color: #2b91af;">ActivationException</span><span style="background: #ffffff; color: #000000;">)</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">//no registered type found, just navigate to the destination, maybe it's not an interface</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">_rootFrame.Navigate(destination, parameter);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li style="background: #f3f3f3;"><span style="background: #ffffff; color: #000000;">}</span></li>
</ol></div>
</div>
</div>
<p>The Navigate method passes everything to the NavigateToPage method that tries to resolve a registered instance of the passed in type, should this fail it throws an ActivationException, in that case just try to navigate. This allows us to navigate to pages that don&rsquo;t use any interface. Once we get the instance out of the IOC we get its type and pass that into the navigate command of the frame. Obviously, before this starts working we need to register the pages in the IOC and that happens in the ViewModelLocator.</p>
<p>So to finish this part 2 of, here&rsquo;s the complete constructor of my ViewModelLocator</p>
<div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:654e69a9-d525-4053-a61e-6f9b7ea2994d" class="wlWriterEditableSmartContent" style="float: none; margin: 0px; display: inline; padding: 0px;">
<div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;">
<div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px;">Code Snippet</div>
<div style="background: #ddd; max-height: 500px; overflow: auto;"><ol style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;" start="1">
<li><span style="background: #ffffff; color: #0000ff;">public</span><span style="background: #ffffff; color: #000000;"> ViewModelLocator()</span></li>
<li style="background: #f3f3f3;"><span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">ServiceLocator</span><span style="background: #ffffff; color: #000000;">.SetLocatorProvider(() =&gt; </span><span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default);</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">if</span><span style="background: #ffffff; color: #000000;"> (</span><span style="background: #ffffff; color: #2b91af;">ViewModelBase</span><span style="background: #ffffff; color: #000000;">.IsInDesignModeStatic)</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">// Create design time view services and models</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">//SimpleIoc.Default.Register&lt;IDataService, DesignDataService&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #0000ff;">else</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">{</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">// Create run time view services and models</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">INavigationService</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">NavigationService</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IService</span><span style="background: #ffffff; color: #000000;">, SDKBroker.WinRT.</span><span style="background: #ffffff; color: #2b91af;">Service</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IMessageApi</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">MessageApi</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IFrameworkApi</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">FrameworkApi</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IDispatcher</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">Dispatcher</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">INetworkApi</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">NetworkApi</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #000000;">}</span></li>
<li style="background: #f3f3f3;">&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">//register views</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IMainPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">MainPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IVolumeDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">VolumeDetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">ICharacterDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">CharacterDetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">ICollectionPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">CollectionPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">DetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IIssueDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">IssueDetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">ILocationDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">LocationDetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">INewsFeedPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">NewsFeedPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IPersonDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">PersonDetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IStoryArcDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">StoryArcDetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">ITeamDetailPage</span><span style="background: #ffffff; color: #000000;">, </span><span style="background: #ffffff; color: #2b91af;">TeamDetailPage</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;</li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #008000;">//register viewmodels</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">MainViewModel</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">VolumeDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">CharacterDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">TeamDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">IssueDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">SearchViewModel</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">DetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">StoryArcDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">LocationDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">PersonDetailViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">CollectionViewModel</span><span style="background: #ffffff; color: #000000;">&gt;();</span></li>
<li style="background: #f3f3f3;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="background: #ffffff; color: #2b91af;">SimpleIoc</span><span style="background: #ffffff; color: #000000;">.Default.Register&lt;</span><span style="background: #ffffff; color: #2b91af;">NewsFeedViewModel</span><span style="background: #ffffff; color: #000000;">&gt;(</span><span style="background: #ffffff; color: #0000ff;">true</span><span style="background: #ffffff; color: #000000;">);</span></li>
<li><span style="background: #ffffff; color: #000000;">}</span></li>
</ol></div>
</div>
</div>
<p>It registers all my api and service layers, all my views that have an interface and all viewmodels.</p>
<h2>Part 2 conclusion</h2>
<p>After a rough start in Part 1 it seems that this experiment has forced me to improve my code by making me add some abstractions. This makes for easier reusable code, both on the same platform as on other platforms. The DEV branch of my app project is once again a fully functional Windows Store app that reacts and behaves exactly as the one that&rsquo;s in the store right now. The next step is to refactor out the ViewModelLocator and then it should be about time to start work on the Windows Phone version. See you in part 3!</p>
{% include imported_disclaimer.html %}
