---
layout: post
title: "run your wp8 app on two emulators simultaneously"
date: 2013-06-17 10:35:23 +0200
comments: true
published: true
categories: ["post"]
tags: [".Net", "Devices", "WP7", "WP8", "msbuild"]
alias: ["/blog/post/2013/06/17/Test-your-WP8-app-on-two-emulators-simultaneously.aspx", "/blog/post/2013/06/17/test-your-wp8-app-on-two-emulators-simultaneously.aspx"]
author: Nico Vermeir
redirect_from:
 - /blog/post/2013/06/17/Test-your-WP8-app-on-two-emulators-simultaneously.aspx
 - /blog/post/2013/06/17/test-your-wp8-app-on-two-emulators-simultaneously.aspx
---
<p>I’m currently working on a Windows Phone 8 project that requires two devices. Those devices talk to each other through a SignalR service. Thanks to Hyper-V I’m able to test/debug this project on two instances of the Windows Phone 8 emulator (I usually pick the WVGA and WVGA 512MB versions). What I used to do is deploy the XAP to one emulator and debug it on the second. I need to do this every time I change the app, I got bored of doing this manually so it was about time to get this automated.</p>  <p>Since Visual Studio 2012 builds the app everytime its codebase changes I can use the post-build script to do this, after all the app should only install itself on both emulators when it’s changed (I did spent time looking for a solution to let the script run every time I hit the debug button but it looks like there’s no way to do this in VS2012). </p>  <p>The point of the post-build script is to fire up the emulator when needed, deploy the app and run it. Visual Studio 2012 debug will fire up the second emulator, deploy the app there and launch it with debug, meaning that only one emulator will have a debugger attached.</p>  <h2>Choosing the emulator for the script</h2>  <p>Microsoft has provided a command line tool for deploying xap files, both onto a device and onto the emulators. Before we can start using it we’ll need to know the correct index of the emulator that we want the script to use. Copy-paste this script into a textfile and save as a .bat file, double click it and you should see a list of all available emulators on your machine (provided that you have the Windows Phone 8 SDK installed of course).</p>  <div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:b07452a6-8352-4402-9468-f0f7011e78d0" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"> <div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px">Code Snippet</div> <div style="background: #ddd; max-height: 300px; overflow: auto"> <ol start="1" style="background: #ffffff; margin: 0 0 0 2em; padding: 0 0 0 5px;"> <li><span style="background:#ffffff;color:#000000">cd </span><span style="background:#ffffff;color:#a31515">&quot;%ProgramFiles(x86)%&#92;Microsoft SDKs&#92;Windows Phone&#92;v8.0&#92;Tools&#92;XAP Deployment&quot;</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#000000">XapDeployCmd.exe /EnumerateDevices</span></li> <li><span style="background:#ffffff;color:#000000">pause</span></li> </ol> </div> </div> </div>  <p><a href="http://i39.tinypic.com/hvec79.jpg" target="_blank"><img src="http://i39.tinypic.com/hvec79.jpg" width="422" height="214" /></a></p>  <p>XapDeployCmd.exe is the commandline tool for everything related to XAP deployments. More information on the tool can be found on <a href="http://msdn.microsoft.com/en-us/library/windowsphone/develop/ff402565(v=vs.105).aspx#BKMK_commandline" target="_blank">MSDN</a></p>  <p>Choose the emulator of your choose from the list and remember its index.</p>  <h2>Building the script</h2>  <p>Time to start building the script. In your Windows Phone 8 project, go to the project properties to the Build Events tab. In the Post-build event command line box enter this script.</p>  <div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:30340163-a385-4d7c-8bcd-c88c00725b38" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"> <div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px">Code Snippet</div> <div style="background: #ddd; max-height: 300px; overflow: auto"> <ol start="1" style="background: #ffffff; margin: 0 0 0 2em; padding: 0 0 0 5px;"> <li><span style="background:#ffffff;color:#000000">cd %ProgramFiles(x86)%&#92;Microsoft SDKs&#92;Windows Phone&#92;v8.0&#92;Tools&#92;XAP Deployment</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#000000">XapDeployCmd.exe /installlaunch $(TargetDir)$(ProjectName)_$(ConfigurationName)_$(PlatformName).xap /targetdevice:1</span></li> </ol> </div> </div> </div>  <p>The first line of the script navigates the command line to the folder where the XapDeployCmd lives (this is the default install path, the tool comes with the WP8 SDK). The second line launches the tool and passes the necessary parameters. the installaunch parameter states that the app should install (or update) the app and launch it when finished. After the installaunch parameter we need to state the path to the xap file, by default (when using the debug configuration in VS2012) it’s in the bin/debug folder and is called something like MyWPApp_debug_anycpu.xap. To make the script easy to transfer over I’ve used variables instead of hardcoding the path and the xap name. Here’s a quick rundown.</p>  <table cellspacing="0" cellpadding="2" width="601" border="1"><tbody>     <tr>       <td valign="top" width="200"><strong>Variable</strong></td>        <td valign="top" width="399"><strong>Meaning</strong></td>     </tr>      <tr>       <td valign="top" width="200">$(TargetDir)</td>        <td valign="top" width="399">the full path to the outputdirectory (for example: c:\users\nico\documents\Projects\MyWPApp\bin\debug\)          <br />          <br />Keep in mind that the last “\” is always included when using this variable</td>     </tr>      <tr>       <td valign="top" width="200">$(ProjectName)</td>        <td valign="top" width="399">The name of the project (didn’t see that one coming, did you? <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Glimlach" src="http://www.spikie.be/blog/images/wlEmoticon-smile_22.png" />) (for example: MyWPApp)</td>     </tr>      <tr>       <td valign="top" width="200">$(ConfigurationName)</td>        <td valign="top" width="399">The used configuration, for example ”release” or “debug”</td>     </tr>      <tr>       <td valign="top" width="200">$(PlatformName)</td>        <td valign="top" width="399">The selected CPU architecture, for example “AllCpu”, “ARM”, “x86”</td>     </tr>   </tbody></table>  <p>With these <strike>powers</strike> variables combined we get the full path to the xap file. The last parameter specifies the to use emulator by passing in the index that we determined at the beginning of this post.</p>  <p>And that’s it. Rebuild your solution and watch the emulator start app, deploy and launch your app. Now every time that you change the code of the app and hit the debug button it will build and deploy to both emulators. One of the emulators should have those debug numbers on the side, making it easy to recognize which one has the debugger attached.</p>  <h2>Conclusion</h2>  <p>Using a very simple post-build script and the in the WP8 included XapDeployCmd tool it’s very easy to deploy an application to two devices simultaneously. This isn’t needed very often but when building something that connects users to each other (like a chat application or a multiplayer game) it can save you quite some hassle. Just make sure that your script uses another emulator version than Visual Studio 2012.</p>  <p>&#160;</p>  <p><script type="text/javascript">// <![CDATA[
google_ad_client = "ca-pub-2343948435149147";
/* spikie.be underpost */
google_ad_slot = "9230774310";
google_ad_width = 468;
google_ad_height = 60;
// ]]
{% include imported_disclaimer.html %}
