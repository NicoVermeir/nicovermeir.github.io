---
layout: post
title: "getting home with windows phone 8 and nfc"
date: 2013-01-11 13:22:22 +0100
comments: true
published: true
categories: ["post"]
tags: ["NFC", ".Net", "Devices", "WP8", "XAML"]
alias: ["/blog/post/2013/01/11/Getting-home-with-Windows-Phone-8-and-NFC.aspx", "/blog/post/2013/01/11/getting-home-with-windows-phone-8-and-nfc.aspx"]
author: Nico Vermeir
redirect_from:
 - /blog/post/2013/01/11/Getting-home-with-Windows-Phone-8-and-NFC.aspx
 - /blog/post/2013/01/11/getting-home-with-windows-phone-8-and-nfc.aspx
---
<p>Imagine this, you’re somewhere you’ve never been before and you need your phone to navigate you home but you need a quick getaway and don’t have time to enter the address manually. Or you’re taking the boy/girl of your dreams home after a great date and want to impress them with some technological stuff (because geeks are the new sexy). In both scenarios NFC can come to the rescue. In this article I’m going to explain how you can program an NFC tag to launch your navigation app and navigate you home. (NOTE: this has been tested on a Nokia Lumia 920 with Nokia Drive).</p>  <p>First, the prerequisites. We need an NFC capable Windows Phone 8 device with navigation software. We also need a blank, NDEF formatted, writable NFC tag (I got mine from <a href="https://rapidnfc.com/" target="_blank">RapidNFC</a>). We’ll also need a dataconnection to fetch our coordinates (only for writing the NFC tag).</p>  <p>Next, the pieces of the puzzle. In this case there are three things that need to be taken care of. First we need to be able to enter an address in an app and get the longitude/latitude coordinates for that address. Second, we need to write the instruction for launching the navigations app and navigating to those coordinates to an NFC tag and third we need our phone to actually launch the app and navigate to the received coordinates. Now to make that last part work we only need to make sure we have an NFC capable phone, have NFC enabled in Settings and that we have navigational software installed.</p>  <p>Enough planning, let’s get to work. First the UI, I‘m going with two TextBlocks, one to enter the address and one that will show the coordinates just to see if that worked. I also need two buttons, one for fetching the coordinates and one for writing the NFC tag. Here’s the XAML</p>  <div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:0e6f3fc3-9a6c-4f39-9c85-05daeda5c44a" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"> <div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px">Code Snippet</div> <div style="background: #ddd; max-height: 300px; overflow: auto"> <ol start="1" style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;"> <li><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">Grid</span><span style="background:#ffffff;color:#ff0000"> x</span><span style="background:#ffffff;color:#0000ff">:</span><span style="background:#ffffff;color:#ff0000">Name</span><span style="background:#ffffff;color:#0000ff">=&quot;ContentPanel&quot;</span><span style="background:#ffffff;color:#ff0000"> Grid.Row</span><span style="background:#ffffff;color:#0000ff">=&quot;1&quot;</span><span style="background:#ffffff;color:#ff0000"> Margin</span><span style="background:#ffffff;color:#0000ff">=&quot;12,0,12,0&quot;&gt;</span></li> <li style="background: #f3f3f3">    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">StackPanel</span><span style="background:#ffffff;color:#0000ff">&gt;</span></li> <li>        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">TextBlock</span><span style="background:#ffffff;color:#ff0000"> Text</span><span style="background:#ffffff;color:#0000ff">=&quot;Address&quot; /&gt;</span></li> <li style="background: #f3f3f3">        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">TextBox</span><span style="background:#ffffff;color:#ff0000"> x</span><span style="background:#ffffff;color:#0000ff">:</span><span style="background:#ffffff;color:#ff0000">Name</span><span style="background:#ffffff;color:#0000ff">=&quot;TextBoxAddress&quot; /&gt;</span></li> <li>                <span style="background:#ffffff;color:#000000">        </span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">TextBlock</span><span style="background:#ffffff;color:#ff0000"> Text</span><span style="background:#ffffff;color:#0000ff">=&quot;Coordinates&quot; /&gt;</span><span style="background:#ffffff;color:#000000"></span></li> <li style="background: #f3f3f3">   <span style="background:#ffffff;color:#000000">        </span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">TextBox</span><span style="background:#ffffff;color:#ff0000"> x</span><span style="background:#ffffff;color:#0000ff">:</span><span style="background:#ffffff;color:#ff0000">Name</span><span style="background:#ffffff;color:#0000ff">=&quot;TextBoxCoordinates&quot; /&gt;</span><span style="background:#ffffff;color:#000000"></span></li> <li>        <span style="background:#ffffff;color:#000000"></span></li> <li style="background: #f3f3f3">        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">StackPanel</span><span style="background:#ffffff;color:#ff0000"> Orientation</span><span style="background:#ffffff;color:#0000ff">=&quot;Horizontal&quot;&gt;</span></li> <li>            <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">Button</span><span style="background:#ffffff;color:#ff0000"> Content</span><span style="background:#ffffff;color:#0000ff">=&quot;Get Coordinates&quot;</span><span style="background:#ffffff;color:#ff0000"> Click</span><span style="background:#ffffff;color:#0000ff">=&quot;GetCoordinatesButtonClick&quot; /&gt;</span></li> <li style="background: #f3f3f3">            <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;</span><span style="background:#ffffff;color:#a31515">Button</span><span style="background:#ffffff;color:#ff0000"> Content</span><span style="background:#ffffff;color:#0000ff">=&quot;Write NFC tag&quot;</span><span style="background:#ffffff;color:#ff0000"> Click</span><span style="background:#ffffff;color:#0000ff">=&quot;WriteTagButtonClick&quot; /&gt;</span></li> <li>        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;/</span><span style="background:#ffffff;color:#a31515">StackPanel</span><span style="background:#ffffff;color:#0000ff">&gt;</span></li> <li style="background: #f3f3f3">    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">&lt;/</span><span style="background:#ffffff;color:#a31515">StackPanel</span><span style="background:#ffffff;color:#0000ff">&gt;</span></li> <li><span style="background:#ffffff;color:#0000ff">&lt;/</span><span style="background:#ffffff;color:#a31515">Grid</span><span style="background:#ffffff;color:#0000ff">&gt;</span></li> </ol> </div> </div> </div>  <p>With this as the final result</p>  <p><a href="http://i45.tinypic.com/nb9d9e.jpg" target="_blank"><img src="http://i45.tinypic.com/nb9d9e.jpg" width="181" height="302" /></a></p>  <p>How this works, we enter an address in the top TextBox and click the “Get Coordinates” button. This will use the Microsoft.Phone.Maps functionality to translate that address into coordinates, those coordinates will show up in the bottom TextBox. When we click the “Write NFC tag” button the app will wait for a writable NFC tag, once that’s detected the data will be written on it. All it takes then is a tap on the tag and the phone will take you home.</p>  <p>Before we dive into code we need to add some capabilities. Using the Maps namespace and using NFC requires two capabilities, double-click the WMAppManifest.xml file and select these capabilities.</p>  <p><a href="http://i46.tinypic.com/2yx3x5g.jpg" target="_blank"><img src="http://i46.tinypic.com/2yx3x5g.jpg" width="476" height="258" /></a></p>  <p>This will keep us away from any UnauthorizedExceptions.</p>  <p>On to the code we go, we’ll start with declaring some private fields.</p>  <div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:456e9be8-8f99-45d8-b8c2-26ccd6af85c3" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"> <div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px">Code Snippet</div> <div style="background: #ddd; max-height: 300px; overflow: auto"> <ol start="1" style="background: #ffffff; margin: 0 0 0 2em; padding: 0 0 0 5px;"> <li><span style="background:#ffffff;color:#0000ff">private</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#2b91af">GeoCoordinate</span><span style="background:#ffffff;color:#000000"> _coordinate;</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#0000ff">private</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#2b91af">ProximityDevice</span><span style="background:#ffffff;color:#000000"> _device;</span></li> </ol> </div> </div> </div>  <p>After that, we go to the “Get Coordinates” button.</p>  <div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:a5cb40c8-0e72-4a30-be80-6e7722b9644b" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"> <div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px">Code Snippet</div> <div style="background: #ddd; max-height: 500px; overflow: auto"> <ol start="1" style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;"> <li><span style="background:#ffffff;color:#0000ff">private</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#0000ff">void</span><span style="background:#ffffff;color:#000000"> GetCoordinatesButtonClick(</span><span style="background:#ffffff;color:#0000ff">object</span><span style="background:#ffffff;color:#000000"> sender, </span><span style="background:#ffffff;color:#2b91af">RoutedEventArgs</span><span style="background:#ffffff;color:#000000"> e)</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#000000">{</span></li> <li>    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">string</span><span style="background:#ffffff;color:#000000"> address = TextBoxAddress.Text.Trim();</span></li> <li style="background: #f3f3f3">&nbsp;</li> <li>    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">if</span><span style="background:#ffffff;color:#000000"> (address == </span><span style="background:#ffffff;color:#0000ff">string</span><span style="background:#ffffff;color:#000000">.Empty)</span></li> <li style="background: #f3f3f3">    <span style="background:#ffffff;color:#000000">{</span></li> <li>        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#2b91af">MessageBox</span><span style="background:#ffffff;color:#000000">.Show(</span><span style="background:#ffffff;color:#a31515">&quot;Address cannot be empty!&quot;</span><span style="background:#ffffff;color:#000000">);</span></li> <li style="background: #f3f3f3">        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">return</span><span style="background:#ffffff;color:#000000">;</span></li> <li>    <span style="background:#ffffff;color:#000000">}</span></li> <li style="background: #f3f3f3">&nbsp;</li> <li>    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#2b91af">GeocodeQuery</span><span style="background:#ffffff;color:#000000"> query = </span><span style="background:#ffffff;color:#0000ff">new</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#2b91af">GeocodeQuery</span></li> <li style="background: #f3f3f3">                             <span style="background:#ffffff;color:#000000">{</span></li> <li>                                 <span style="background:#ffffff;color:#000000">GeoCoordinate = </span><span style="background:#ffffff;color:#0000ff">new</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#2b91af">GeoCoordinate</span><span style="background:#ffffff;color:#000000">(0, 0),</span></li> <li style="background: #f3f3f3">                                 <span style="background:#ffffff;color:#000000">SearchTerm = address</span></li> <li>                             <span style="background:#ffffff;color:#000000">};</span></li> <li style="background: #f3f3f3">&nbsp;</li> <li>    <span style="background:#ffffff;color:#000000">query.QueryCompleted += (o, args) =&gt;</span></li> <li style="background: #f3f3f3">                                <span style="background:#ffffff;color:#000000">{</span></li> <li>                                    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">if</span><span style="background:#ffffff;color:#000000"> (args.Result == </span><span style="background:#ffffff;color:#0000ff">null</span><span style="background:#ffffff;color:#000000">)</span></li> <li style="background: #f3f3f3">                                    <span style="background:#ffffff;color:#000000">{</span></li> <li>                                        <span style="background:#ffffff;color:#000000">TextBoxCoordinates.Text = </span><span style="background:#ffffff;color:#a31515">&quot;No coordinates found&quot;</span><span style="background:#ffffff;color:#000000">;</span></li> <li style="background: #f3f3f3">                                        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">return</span><span style="background:#ffffff;color:#000000">;</span></li> <li>                                    <span style="background:#ffffff;color:#000000">}</span></li> <li style="background: #f3f3f3">                                    <span style="background:#ffffff;color:#000000">_coordinate = args.Result[0].GeoCoordinate;</span></li> <li>                                    <span style="background:#ffffff;color:#000000">TextBoxCoordinates.Text = </span><span style="background:#ffffff;color:#0000ff">string</span><span style="background:#ffffff;color:#000000">.Format(</span><span style="background:#ffffff;color:#a31515">&quot;Lat: {</span><span style="background:#ffffff;color:#3cb371">0}</span><span style="background:#ffffff;color:#a31515"> / Lon: {</span><span style="background:#ffffff;color:#3cb371">1}</span><span style="background:#ffffff;color:#a31515">&quot;</span><span style="background:#ffffff;color:#000000">, </span></li> <li style="background: #f3f3f3">                                        <span style="background:#ffffff;color:#000000">args.Result[0].GeoCoordinate.Latitude.ToString(), </span></li> <li>                                        <span style="background:#ffffff;color:#000000">args.Result[0].GeoCoordinate.Longitude.ToString());</span></li> <li style="background: #f3f3f3">                                <span style="background:#ffffff;color:#000000">};</span></li> <li>    <span style="background:#ffffff;color:#000000">query.QueryAsync();</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#000000">}</span></li> </ol> </div> </div> </div>  <p>First thing we need to do is verify if an address was actually entered in the TextBlock. When that’s verified we declare a GeocodeQuery and initialize it with a new GeoCoordinate and pass the address as a SearchTerm. When the query completes we check if there’s a result. The query should return a result of type IList&lt;MapLocation&gt; the first element in the list is the one we need, and from this first item we need the GeoCoordinate property, we’ll put that one in the _coordinate field. We call the QueryAsync() method on GeocodeQuery to get the result. For some reason QueryAsync returns void, meaning we can’t just await it. We need to do this the oldschool way and use the QueryCompleted event handler.</p>  <p>With that, the first part of our puzzle is solved. We can go from an address to a coordinate. Now we just need a way to get this coordinate and the navigation app launch instruction onto an NFC tag. Let’s have a look at what happens when the “Write NFC tag” button is clicked.</p>    <div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:9ab8be4b-e897-400d-8dee-cdc73d07ebde" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"> <div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px">Code Snippet</div> <div style="background: #ddd; max-height: 500px; overflow: auto"> <ol start="1" style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;"> <li><span style="background:#ffffff;color:#0000ff">private</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#0000ff">void</span><span style="background:#ffffff;color:#000000"> WriteTagButtonClick(</span><span style="background:#ffffff;color:#0000ff">object</span><span style="background:#ffffff;color:#000000"> sender, </span><span style="background:#ffffff;color:#2b91af">RoutedEventArgs</span><span style="background:#ffffff;color:#000000"> e)</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#000000">{</span></li> <li>    <span style="background:#ffffff;color:#000000">_device = </span><span style="background:#ffffff;color:#2b91af">ProximityDevice</span><span style="background:#ffffff;color:#000000">.GetDefault();</span></li> <li style="background: #f3f3f3">&nbsp;</li> <li>    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">if</span><span style="background:#ffffff;color:#000000"> (_device == </span><span style="background:#ffffff;color:#0000ff">null</span><span style="background:#ffffff;color:#000000">)</span></li> <li style="background: #f3f3f3">    <span style="background:#ffffff;color:#000000">{</span></li> <li>        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#2b91af">MessageBox</span><span style="background:#ffffff;color:#000000">.Show(</span><span style="background:#ffffff;color:#a31515">&quot;NFC not detected, is it disabled?&quot;</span><span style="background:#ffffff;color:#000000">);</span></li> <li style="background: #f3f3f3">        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">return</span><span style="background:#ffffff;color:#000000">;</span></li> <li>    <span style="background:#ffffff;color:#000000">}</span></li> <li style="background: #f3f3f3">&nbsp;</li> <li>    <span style="background:#ffffff;color:#000000">TextBlockStatus.Text = </span><span style="background:#ffffff;color:#a31515">&quot;NFC detected, waiting for writable tag&quot;</span><span style="background:#ffffff;color:#000000">;</span></li> <li style="background: #f3f3f3">&nbsp;</li> <li>    <span style="background:#ffffff;color:#000000">_device.SubscribeForMessage(</span><span style="background:#ffffff;color:#a31515">&quot;WriteableTag&quot;</span><span style="background:#ffffff;color:#000000">, (device, message) =&gt;</span></li> <li style="background: #f3f3f3">                    <span style="background:#ffffff;color:#000000">{</span></li> <li>                        <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#2b91af">Deployment</span><span style="background:#ffffff;color:#000000">.Current.Dispatcher.BeginInvoke(() =&gt;</span></li> <li style="background: #f3f3f3">                                        <span style="background:#ffffff;color:#000000">{</span></li> <li>                                            <span style="background:#ffffff;color:#000000">TextBlockStatus.Text = </span><span style="background:#ffffff;color:#a31515">&quot;writable tag detected&quot;</span><span style="background:#ffffff;color:#000000">;</span></li> <li style="background: #f3f3f3">                                        <span style="background:#ffffff;color:#000000">});</span></li> <li>                        <span style="background:#ffffff;color:#000000">WriteTag();</span></li> <li style="background: #f3f3f3">                    <span style="background:#ffffff;color:#000000">});</span></li> <li><span style="background:#ffffff;color:#000000">}</span></li> </ol> </div> </div> </div>  <p>There’s some NFC magic going on here. First we instantiate a ProximityDevice instance and activate the proximity provider. If, at that point, _device is null it means that the Windows Phone device either has no NFC capabilities or they are disabled in Settings &gt; Tap &amp; Send. If _device is not null we have successfully initialized NFC. Line 13 is a bit special. We call the SubscribeForMessage() method on the ProximityDevice. What happens is, when the NFC provider reads a tag it sends a message, we subscribe to the “WritableTag” message because it’s the only thing we can use in this case. If you want a complete list of all supported message types, have a look at <a href="http://msdn.microsoft.com/en-us/library/windows/apps/xaml/hh701129.aspx" target="_blank">MSDN.</a>Since the subscription doesn’t live on the UI thread we need to use the Dispatcher in order to update the TextBlock that hold the status. The WriteTag() method gets called when a writable NFC tag is detected.</p>  <p>   <div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:e96615a2-9eef-4975-8deb-14fe2884c203" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"> <div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"> <div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px">Code Snippet</div> <div style="background: #ddd; max-height: 500px; overflow: auto"> <ol start="1" style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;"> <li><span style="background:#ffffff;color:#0000ff">private</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#0000ff">void</span><span style="background:#ffffff;color:#000000"> WriteTag()</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#000000">{</span></li> <li>    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">string</span><span style="background:#ffffff;color:#000000"> uri = </span><span style="background:#ffffff;color:#0000ff">string</span><span style="background:#ffffff;color:#000000">.Format(</span><span style="background:#ffffff;color:#a31515">@&quot;ms-drive-to:?destination.latitude={</span><span style="background:#ffffff;color:#3cb371">0}</span><span style="background:#ffffff;color:#a31515">&amp;destination.longitude={</span><span style="background:#ffffff;color:#3cb371">1}</span><span style="background:#ffffff;color:#a31515">&quot;</span><span style="background:#ffffff;color:#000000">,</span></li> <li style="background: #f3f3f3">        <span style="background:#ffffff;color:#000000">_coordinate.Latitude.ToString(</span><span style="background:#ffffff;color:#2b91af">CultureInfo</span><span style="background:#ffffff;color:#000000">.InvariantCulture), </span></li> <li>        <span style="background:#ffffff;color:#000000">_coordinate.Longitude.ToString(</span><span style="background:#ffffff;color:#2b91af">CultureInfo</span><span style="background:#ffffff;color:#000000">.InvariantCulture));</span></li> <li style="background: #f3f3f3">&nbsp;</li> <li>    <span style="background:#ffffff;color:#000000"></span><span style="background:#ffffff;color:#0000ff">var</span><span style="background:#ffffff;color:#000000"> writer = </span><span style="background:#ffffff;color:#0000ff">new</span><span style="background:#ffffff;color:#000000"> </span><span style="background:#ffffff;color:#2b91af">DataWriter</span></li> <li style="background: #f3f3f3">                         <span style="background:#ffffff;color:#000000">{</span></li> <li>                             <span style="background:#ffffff;color:#000000">UnicodeEncoding = </span><span style="background:#ffffff;color:#2b91af">UnicodeEncoding</span><span style="background:#ffffff;color:#000000">.Utf16LE</span></li> <li style="background: #f3f3f3">                         <span style="background:#ffffff;color:#000000">};</span></li> <li>&nbsp;</li> <li style="background: #f3f3f3">    <span style="background:#ffffff;color:#000000">writer.WriteString(uri);</span></li> <li>&nbsp;</li> <li style="background: #f3f3f3">    <span style="background:#ffffff;color:#000000">_device.PublishBinaryMessage(</span><span style="background:#ffffff;color:#a31515">&quot;WindowsUri:WriteTag&quot;</span><span style="background:#ffffff;color:#000000">, writer.DetachBuffer(), (sender, id) =&gt;</span></li> <li>        <span style="background:#ffffff;color:#000000">Dispatcher.BeginInvoke(() =&gt; TextBlockStatus.Text = </span><span style="background:#ffffff;color:#a31515">&quot;Tag written&quot;</span><span style="background:#ffffff;color:#000000">));</span></li> <li style="background: #f3f3f3"><span style="background:#ffffff;color:#000000">}</span></li> </ol> </div> </div> </div> </p>  <p>This method is the piece of magic that glues all pieces together. We start by setting the Uri that will launch when the tag is tapped. “ms-drive-to” means we need whatever app is registered to the drive-to command (you can also get walking directions by using “ms-walk-to”) the rest of the string are parameters we’re passing into that app. We are passing the coordinates into the app, passing those in means that the app knows we want to navigate and where we want to go. We also need a DataWriter with Utf16LE encoding (this is the encoding needed for writing uri messages to NFC tags). We fill the buffer of the DataWriter with the uri string we’ve constructed a second ago and we publish it through the ProximityDevice as a binary message. The PublishBinaryMessage() method takes in a messagetype and an implementation of IBuffer, provided by the DataWriter in this case. In an overload the method also takes a method that fires when the publish is completed, we use this event handler to update our UI.</p>  <p>That’s all folks, with a bit of tinkering we’ve combined two possibilities of the Windows Phone 8 platform in a very cool, almost “magical” trick. I've got my NFC sticker in my car, impressing people wherever I go and now you can all be as cool as I am <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="http://www.spikie.be/blog/images/wlEmoticon-smile_11.png" /> you’re welcome.</p>  <p>To finish of, some action shots of the app.</p>  <p><a href="http://i47.tinypic.com/xdtr9w.jpg" target="_blank"><img src="http://i47.tinypic.com/xdtr9w.jpg" width="164" height="273" /></a>    <br />Coordinates detected</p>  <p><a href="http://i49.tinypic.com/ve4rwg.jpg" target="_blank"><img src="http://i49.tinypic.com/ve4rwg.jpg" width="165" height="275" /></a>    <br />Tapped a programmed tag</p>  <p><a href="http://i50.tinypic.com/162g3n.jpg" target="_blank"><img src="http://i50.tinypic.com/162g3n.jpg" width="166" height="277" /></a>    <br />Navigation started</p>
{% include imported_disclaimer.html %}
